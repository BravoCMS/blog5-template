
// remove debug info console.log('#code.*');
jQuery(function ($) {

    $.fn.attachment = function (settings) {

        settings = $.extend({
            afterRender: function () {}
        }, settings);

        var attach = function (e) {
            if (!$(e).hasClass('attaching')) {
                var $exists = $(".attachment-ajax[url='" + $(e).attr('url') + "'].attached:first");
                if (!$exists.length) {
                    $exists = $(".attachment-ajax[url='" + $(e).attr('url') + "'].attaching:first");
                }

                if ($exists.length) {
                    if (!$exists.hasClass('attached')) {
                        // If the first element is not ready, wait
                        //console.log('$21 wait', e);
                        window.setTimeout(function () {
                            $(e).attachment(settings);
                        }, 1000);
                        return;
                    }

                    //console.log('$22', e);
                    //console.log('$23', $exists);
                    console.log('$24', $exists.data('$button'));
                    console.log('$25', $exists.data('$button').data('$popup'));

                    var $popup = $exists.data('$button').data('$popup');
                    var $button = $exists.data('$button').clone().insertAfter(e);
                    $(e).data('$button', $button);

                    if ($(e).val()) {
                        $button.find('.attachment-img img').remove();

                        if ($(e).attr('multiple')) {
                            var ids = $(e).val().split(',');
                            $.each(ids, function (i, id) {
                                $button.find('.attachment-img').append($popup.find('div[attachment-file-id="' + id + '"]').find('img').clone().attr('attachment-file-id', id));
                            });
                        } else {
                            $button.find('.attachment-img').append($popup.find('div[attachment-file-id="' + $(e).val() + '"]').find('img').clone().attr('attachment-file-id', $(e).val()));
                        }
                    }

                    $button.data('$popup', $popup).data('input', e).click(function (e) {
                        e.preventDefault();

                        var $popup = $(this).data('$popup');

                        $popup.data('input', $(this).data('input')).modal({show: true});
                        $popup.find('.attachment').removeClass('ui-selected');

                        if ($($(this).data('input')).attr('multiple')) {
                            $popup.find('.attachments').selectable("enable");

                            var ids = $($(this).data('input')).val().split(',');
                            $.each(ids, function (i, id) {
                                $popup.find('.attachment[attachment-file-id="' + id + '"]').addClass('ui-selected');
                            });

                            $popup.find('.js-show-only-multiple').removeClass('hide');
                            $popup.find('.js-select-img-count').text($popup.find('.ui-selected').length);

                            if ($popup.find('.ui-selected').length == $popup.find('.attachment').length) {
                                $popup.find('.js-select-all-img').addClass('hide');
                            } else if (!$popup.find('.ui-selected').length) {
                                $popup.find('.js-unselect-all-img').addClass('hide');
                            }
                        } else {
                            $popup.find('.attachments').selectable("disable");
                            $popup.find('.attachment[attachment-file-id="' + $($(this).data('input')).val() + '"]').addClass('ui-selected');
                            $popup.find('.js-show-only-multiple').addClass('hide');
                        }

                        if (!$popup.find('.attachment').length) {
                            $popup.find('.js-show-only-multiple').addClass('hide');
                            $popup.find('.js-add-selected-photo').addClass('hide');
                        }

                        $popup.find('.close').data('selectedPhoto', $popup.find('.ui-selected').length);

                        attachmentAlert($popup);

                        var imgList = [];
                        $(this).closest('.lb-container').find('.img-list img').each(function (index, el) {
                            var original = true;
                            if (index == 0) {
                                imgList.push($(this));
                            } else {
                                for (var i = 0; i < imgList.length; i++) {
                                    if ($(this) == imgList[i]) {
                                        original = false;
                                        break;
                                    }
                                }
                                if (original) {
                                    imgList.push($(this));
                                }
                            }
                        });
                        $('.modal.pu-attachmentSelector .attachment').each(function () {
                            for (var i = 0; i < imgList.length; i++) {
                                if ($(this).attr('attachment-file-id') == imgList[i].attr('fileid')) {
                                    $(this).addClass('ui-active');
                                }
                            }
                        });
                    });

                    if (typeof settings.afterRender === "function") {
                        settings.afterRender();
                    }

                    return;
                }
                e = $(".attachment-ajax[url='" + $(e).attr('url') + "']").not('.attaching').addClass('attaching');
                $.ajax({
                    url: $(e).attr('url'),
                    data: {
                        act: 'button',
                        url: $(e).attr('url'),
                        filename: $(e).attr('filename'),
                        attachmentFileId: $(e).val()
                    },
                    context: e,
                    dataType: 'jsonp',
                    success: function (data) {
                        //console.log('#code.001');
                        if (data.button) {
                            //console.log('#code.002');
                            var $popup = $(data.popup).appendTo(document.body);
                            this.each(function () {
                                //console.log('#code.003');
                                var $button = $(data.button).insertAfter(this);
                                $button.data('$popup', $popup);
                                $button.data('input', this);
                                $(this).data('$button', $button);
                                $(this).addClass('attached');
                                $(this).addClass('attached-first');

                                console.log('$75', $popup);
                                console.log('$76', $button);

                                if ($(this).val()) {
                                    $button.find('.attachment-img img').remove();

                                    if ($(this).attr('multiple')) {
                                        var ids = $(this).val().split(',');
                                        $.each(ids, function (i, id) {
                                            $button.find('.attachment-img').append($popup.find('div[attachment-file-id="' + id + '"]').find('img').clone().attr('attachment-file-id', id));
                                        });

                                        if (typeof $.fn.sortable === "function") {
                                            var adjustment;
                                            $button.find('.attachment-img').sortable({
                                                cursor: "move",
                                                itemSelector: "img",
                                                placeholder: '<div class="attachment-img-placeholder" />',
                                                onDrop: function (item, targetContainer, _super, event) {
                                                    item.removeAttr("style").removeClass('dragged');
                                                    $("body").removeClass('dragging');

                                                    var ids = [];
                                                    $(item).parent().find('img').each(function () {
                                                        ids[ids.length] = $(this).attr('attachment-file-id');
                                                    });
                                                    $($button.data('input')).val(ids.join());
                                                },
                                                onDragStart: function ($item, container, _super) {
                                                    var offset = $item.offset();
                                                    var pointer = container.rootGroup.pointer;

                                                    adjustment = {
                                                        left: pointer.left - offset.left,
                                                        top: pointer.top - offset.top
                                                    };

                                                    _super($item, container);
                                                },
                                                onDrag: function ($item, position) {
                                                    $item.css({
                                                        position: 'absolute',
                                                        left: position.left - adjustment.left,
                                                        top: position.top - adjustment.top
                                                    });
                                                },
                                                afterMove: function ($placeholder, container) {
                                                    var $item = container.el.children('.dragged:first');
                                                    $placeholder.css({
                                                        height: $item.outerHeight(),
                                                        width: $item.outerWidth()
                                                    });
                                                }
                                            });
                                        }
                                    } else {
                                        $button.find('.attachment-img').append($popup.find('div[attachment-file-id="' + $(this).val() + '"]').find('img').clone().attr('attachment-file-id', $(this).val()));
                                    }
                                }

                                if ($('body').hasClass('desktop')) {
                                    $popup.find('.attachments').selectable({
                                        filter: ".attachment",
                                        cancel: ".js-sorting-handle",
                                        distance: 1,
                                        stop: function (event, ui) {
                                            $popup.find('.js-select-img-count').text($popup.find('.ui-selected').length);
                                        }
                                    });
                                }

                                if (typeof $.fn.sortable === "function") {
                                    var adjustment;
                                    $popup.find('.attachments').sortable({
                                        handle: ".js-sorting-handle",
                                        cursor: "move",
                                        itemSelector: ".attachment",
                                        placeholder: '<div class="attachment-placeholder" />',
                                        update: function (event, ui) {
                                            var ordering = [];
                                            $popup.find('.attachments .attachment').each(function () {
                                                ordering[ordering.length] = $(this).attr('attachment-file-id');
                                            });

                                            $.ajax({
                                                url: $popup.attr('url') + '&act=saveOrdering',
                                                data: {
                                                    ordering: ordering
                                                },
                                                type: "POST",
                                                dataType: 'jsonp',
                                                success: function (data) {
                                                    console.log('saving order', data);
                                                }
                                            });
                                        },
                                        onDrop: function (item, targetContainer, _super, event) {
                                            item.removeAttr("style").removeClass('dragged');
                                            $("body").removeClass('dragging');
                                        },
                                        onDragStart: function ($item, container, _super) {
                                            var offset = $item.offset();
                                            var pointer = container.rootGroup.pointer;

                                            adjustment = {
                                                left: pointer.left - offset.left,
                                                top: pointer.top - offset.top
                                            };

                                            _super($item, container);
                                        },
                                        onDrag: function ($item, position) {
                                            $item.css({
                                                left: position.left - adjustment.left,
                                                top: position.top - adjustment.top
                                            });
                                        },
                                        afterMove: function ($placeholder, container) {
                                            var $item = container.el.children('.dragged:first');
                                            $placeholder.css({
                                                height: $item.outerHeight(),
                                                width: $item.outerWidth()
                                            });
                                        }
                                    });
                                }

                                $popup.on('shown.bs.modal', function (e) {
                                    var modalHeight = $(this).find('.modal-dialog').height(),
                                            modalHeaderHeight = $(this).find('.modal-header').outerHeight(true),
                                            modalFooterHeight = $(this).find('.modal-footer').outerHeight(true),
                                            modalBodyHeight = modalHeight - modalHeaderHeight - modalFooterHeight;

                                    $(this).find('.modal-body').innerHeight(modalBodyHeight);
                                });

                                //$popup.find('textarea').attr('autosaving-url', $(this).attr('url'));

                                $button.click(function (e) {
                                    console.log('#code.004');
                                    e.preventDefault();

                                    var $popup = $(this).data('$popup');

                                    $popup.data('input', $(this).data('input')).modal({show: true});
                                    $popup.find('.attachment').removeClass('ui-selected');

                                    selectAttachments($($(this).data('input')), $popup);
                                    /*if ($($(this).data('input')).attr('multiple')) {
                                     $popup.find('.attachments').selectable("enable");
                                     
                                     var ids = $($(this).data('input')).val().split(',');
                                     $.each(ids, function (i, id) {
                                     $popup.find('.attachment[attachment-file-id="' + id + '"]').addClass('ui-selected');
                                     });
                                     } else {
                                     $popup.find('.attachments').selectable("disable");
                                     $popup.find('.attachment[attachment-file-id="' + $($(this).data('input')).val() + '"]').addClass('ui-selected');
                                     }*/

                                    attachmentAlert($popup);
                                });

                                if (typeof settings.afterRender === "function") {
                                    settings.afterRender();
                                }
                            });
                        } else {
                            console.log(data);
                        }
                        //console.log('#code.005');
                    }
                });
            }
        };

        $(this).each(function () {
            //console.log('#code.006');
            attach(this);
        });
    };

    // display attachment modal on drag from outside window
    $(document.body).on('dragenter dragover', function (e) {
        //console.log('#code.009');
        e.stopPropagation();
        e.preventDefault();
        if ($(this).hasClass('d-not-hover') && !$('.pu-attachmentSelector:first').hasClass('in')) {
            $('.pu-attachmentSelector:first').modal({show: true});
        }
    });
    $(document.body).on('mouseenter mouseover', function () {
        //console.log('#code.010');
        $(this).removeClass('d-not-hover');
    });
    $(document.body).on('mouseleave', function () {
        //console.log('#code.011');
        $(this).addClass('d-not-hover');
    });

    // display message on file drag 
    var dragenterTimer = false;
    $(document.body).on('dragenter dragover', '.pu-attachmentSelector', function (e) {
        //console.log('#code.012');
        e.stopPropagation();
        e.preventDefault();

        if (dragenterTimer !== false) {
            clearTimeout(dragenterTimer)
        }

        if ($(this).find('.modal-body .js-attachment-dragover').length === 0) {
            $(this).find('.modal-body').prepend('<div class="alert alert-success js-attachment-dragover" role="alert"><strong>Отлично!</strong> Загрузка начнется как только отпустите кнопку мыши.</div>');
        }
    });
    $(document.body).on('dragleave drop', '.pu-attachmentSelector', function (e) {
        //console.log('#code.013');
        e.stopPropagation();
        e.preventDefault();

        dragenterTimer = setTimeout(function () {
            $('.js-attachment-dragover').remove();
        }, 300);
    });

    function selectAttachments($inputField, $popup)
    {
        if ($inputField.attr('multiple')) {
            $popup.find('.attachments').selectable("enable");

            var ids = $inputField.val().split(',').reverse();
            $.each(ids, function (i, id) {
                $popup.find('.attachment[attachment-file-id="' + id + '"]').addClass('ui-selected').prependTo($popup.find('.attachments'));
            });

            $popup.find('.js-show-only-multiple').removeClass('hide');
            $popup.find('.js-select-img-count').text($popup.find('.ui-selected').length);
            if ($popup.find('.ui-selected').length == $popup.find('.attachment').length) {
                $popup.find('.js-select-all-img').addClass('hide');
            } else if (!$popup.find('.ui-selected').length) {
                $popup.find('.js-unselect-all-img').addClass('hide');
            }
        } else {
            $popup.find('.attachments').selectable("disable");
            $popup.find('.attachment[attachment-file-id="' + $inputField.val() + '"]').addClass('ui-selected').prependTo($popup.find('.attachments'));
            $popup.find('.js-show-only-multiple').addClass('hide');
        }

        if (!$popup.find('.attachment').length) {
            $popup.find('.js-show-only-multiple').addClass('hide');
            $popup.find('.js-add-selected-photo').addClass('hide');
        }

        $popup.find('.close').data('selectedPhoto', $popup.find('.ui-selected').length);
    }

    function sendUrlToServer(url, $field)
    {
        $field.val("");

        //console.log('#code.014');
        var $popup = $field.closest('.pu-attachmentSelector');
        var uploadURL = $popup.attr('url') + '&act=uploadUrl&filename=' + encodeURIComponent($popup.attr('filename')) + '&url=' + encodeURIComponent($popup.attr('url'));
        $.ajax({
            url: uploadURL,
            type: "POST",
            data: {
                uploadUrl: url
            },
            dataType: 'jsonp',
            context: $popup,
            success: function (data) {
                console.log('#code.439', typeof data, data);

                if (data.list) {
                    $(this).find('.attachments').html(data.list);
                } else if (data.message) {
                    $.infoAlert({
                        header: t.text("js_attachments_upload_error_header"),
                        message: t.text(data.message),
                        type: 'danger'
                    });
                }

                selectAttachments($($(this).data('input')), $(this));
            },
            error: function (data) {
                console.log('#code.463', data);
            },
        });
    }

    function sendFileToServer(formData, status)
    {
        //console.log('#code.014');
        var $popup = $(status.statusbar).closest('.pu-attachmentSelector');
        var uploadURL = $popup.attr('url') + '&act=upload&filename=' + encodeURIComponent($popup.attr('filename')) + '&url=' + encodeURIComponent($popup.attr('url'));
        //var extraData = {}; //Extra Data.
        var jqXHR = $.ajax({
            xhr: function () {
                var xhrobj = $.ajaxSettings.xhr();
                if (xhrobj.upload) {
                    xhrobj.upload.addEventListener('progress', function (event) {
                        var percent = 0;
                        var position = event.loaded || event.position;
                        var total = event.total;
                        if (event.lengthComputable) {
                            percent = Math.ceil(position / total * 100);
                        }
                        //Set progress
                        //console.log('#code.015', percent);
                        status.setProgress(percent);
                    }, false);
                }
                return xhrobj;
            },
            url: uploadURL,
            type: "POST",
            contentType: false,
            processData: false,
            cache: false,
            data: formData,
            dataType: 'jsonp',
            context: $popup,
            success: function (data) {
                console.log('#code.016', typeof data, data);
                status.setProgress(100);

                if (data.list) {
                    $(status.statusbar).closest('.pu-attachmentSelector').find('.attachments').html(data.list);
                } else if (data.message) {
                    $.infoAlert({
                        header: t.text("js_attachments_upload_error_header"),
                        message: t.text(data.message),
                        type: 'danger'
                    });
                }

                selectAttachments($($(this).data('input')), $(this));

                $(status.statusbar).closest('.pu-attachmentSelector').find('input[type=file]').html('').val('');
                if (!$(status.statusbar).siblings('.statusbar').length) {
                    //console.log('#code.017');
                    $(status.statusbar).closest('.pu-attachmentSelector').removeClass('uploading');
                }

                attachmentAlert($(status.statusbar).closest('.pu-attachmentSelector'));

                $(status.statusbar).remove();
            },
            error: function (data) {
                console.log('#code.018', data);
                status.setProgress(100);
                $(status.statusbar).closest('.pu-attachmentSelector').find('input[type=file]').html('').val('');
                if (!$(status.statusbar).siblings('.statusbar').length) {
                    $(status.statusbar).closest('.pu-attachmentSelector').removeClass('uploading');
                }
                $(status.statusbar).remove();

                console.log(data);
            },
        });

        status.setAbort(jqXHR);
    }

    function createStatusbar(obj)
    {
        //console.log('#code.019');
        this.statusbar = $('<div class="alert alert-info" role="alert"><strong>Загрузка: </strong></div>');
        this.filename = $('<span class="filename"></span>').appendTo(this.statusbar);
        this.size = $('<span class="filesize"></span>').appendTo(this.statusbar);
        this.progressBar = $('<div class="progress"><div class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width:0%;">0%</div></div>').appendTo(this.statusbar);
        this.abort = $('<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>').prependTo(this.statusbar);
        obj.prepend(this.statusbar);

        this.setFileNameSize = function (name, size) {
            //console.log('#code.020');
            var sizeStr = "";
            var sizeKB = size / 1024;
            if (parseInt(sizeKB) > 1024) {
                var sizeMB = sizeKB / 1024;
                sizeStr = sizeMB.toFixed(2) + " MB";
            } else {
                sizeStr = sizeKB.toFixed(2) + " KB";
            }

            this.filename.html(name);
            this.size.html(sizeStr);
        }
        this.setProgress = function (progress) {
            console.log('#code.021', progress);
            progress = parseInt(progress);
            this.progressBar.find('.progress-bar').width(progress + "%").html(progress + "%");
            if (progress >= 100) {
                this.abort.addClass('hide');
            }
        }
        this.setAbort = function (jqxhr) {
            //console.log('#code.022');
            this.abort.click(function (e) {
                //console.log('#code.023');
                jqxhr.abort();
                e.preventDefault();
            });
        }
    }

    function handleFileUpload(files, obj)
    {
        //console.log('#code.024');
        for (var i = 0; i < files.length; i++) {
            //console.log('#code.025');
            var fd = new FormData();
            fd.append('file', files[i]);

            var status = new createStatusbar(obj); //Using this we can set progress.
            status.setFileNameSize(files[i].name, files[i].size);
            sendFileToServer(fd, status);
        }
    }

    $(document.body).on('drop', '.pu-attachmentSelector', function (e) {
        //console.log('#code.026');
        e.stopPropagation();
        e.preventDefault();

        $(this).removeClass('dragenter');

        if (typeof e.originalEvent !== "undefined" && typeof e.originalEvent.dataTransfer !== "undefined" && e.originalEvent.dataTransfer.files.length) {
            //console.log('#code.027');
            $(this).addClass('uploading');

            var files = e.originalEvent.dataTransfer.files;
            handleFileUpload(files, $(this).find('.modal-body'));
        }
    });

    $(document.body).on('drop', function (e) {
        //console.log('#code.028');
        e.preventDefault();
        e.stopPropagation();

        if (typeof e.originalEvent !== "undefined" && typeof e.originalEvent.dataTransfer !== "undefined" && e.originalEvent.dataTransfer.files.length) {
            //console.log('#code.029');
            var $pu = $('.pu-attachmentSelector:first').modal({show: true}).addClass('uploading').removeClass('dragenter');

            var files = e.originalEvent.dataTransfer.files;
            handleFileUpload(files, $pu.find('.modal-body'));
        }
    });

    $(document.body).on('change', '.pu-attachmentSelector input[type=file]', function (e) {
        //console.log('#code.030');
        e.stopPropagation();
        e.preventDefault();

        $(this).closest('.pu-attachmentSelector').addClass('uploading');

        var files = this.files;
        handleFileUpload(files, $(this).closest('.pu-attachmentSelector').find('.modal-body'));
    });

    $(document.body).on('click', '.pu-attachmentSelector .attachment .remove', function (e) {
        //console.log('#code.031');
        e.stopPropagation();
        e.preventDefault();
        if (e.shiftKey || confirm("Удалить?\nИспользуйте клавишу 'Shift' чтобы удалять без предупреждения.")) {
            //console.log('#code.032');
            var removeURL = $(this).closest('.pu-attachmentSelector').attr('url') + '&act=remove&remove=' + $(this).closest('.attachment').attr('attachment-file-id') + '&url=' + encodeURIComponent($(status.statusbar).closest('.pu-attachmentSelector').attr('url'));
            $.ajax({
                url: removeURL,
                dataType: 'jsonp',
                context: $(this).closest('.pu-attachmentSelector'),
                success: function (data) {
                    //console.log('#code.033');
                    $(this).find('.attachments').html(data.list);
                    selectAttachments($($(this).data('input')), $(this));
                }
            });
        }
    });

    $(document.body).on('click', '.pu-attachmentSelector .attachment', function (e) {
        //console.log('#code.034');
        e.preventDefault();

        var select = true;
        if ($(e.target).closest('.js-photo-text-button').length) {
            select = false;
        } else if ($(e.target).closest('.js-photo-text').length) {
            select = false;
        } else if ($(e.target).closest('.js-photo-text-dismiss').length) {
            select = false;
        }

        if (select) {
            //if (e.ctrlKey) {
            //console.log('#code.035');
            var $popup = $(this).closest('.pu-attachmentSelector');
            if (!$($popup.data('input')).attr('multiple')) {
                $(this).siblings('.attachment').removeClass('ui-selected');
            }

            if ($(this).hasClass('ui-selected')) {
                $(this).removeClass('ui-selected');
            } else {
                $(this).addClass('ui-selected');
            }
            /*} else {
             //console.log('#code.036');
             $(this).addClass('ui-selected').siblings('.attachment').removeClass('ui-selected');
             }*/

            $(this).closest('.modal-dialog').find('.js-select-img-count').text($(this).closest('.modal-dialog').find('.ui-selected').length);
            $(this).closest('.modal-dialog').find('.js-add-selected-photo').removeClass('hide');

            attachmentAlert($(this).closest('.pu-attachmentSelector'));
        }
    });

    $(document.body).on('dblclick', '.pu-attachmentSelector .attachment', function (e) {
        //console.log('#code.037');
        e.preventDefault();
        $(this).addClass('ui-selected');
        $(this).closest('.pu-attachmentSelector').find('.save').trigger('click');
    });

    $(document.body).on('click', '.pu-attachmentSelector .save', function (e) {
        //console.log('#code.038');
        e.preventDefault();
        var $input = $($(this).closest('.pu-attachmentSelector').data('input'));
        var $selected = $(this).closest('.pu-attachmentSelector').find('.attachment.ui-selected');

        if (!$selected.length) {
            var confirmResult = confirm("Вы не выбрали ни одного загруженного фото, поэтому на сайте они не отобразятся. Продолжить?");
            if (!confirmResult) {
                return;
            }
        }

        $(this).closest('.pu-attachmentSelector').modal('hide');

        $input.data('$button').find('.attachment-img img').remove();

        if ($input.attr('multiple')) {
            var ids = [];
            $selected.each(function () {
                ids[ids.length] = $(this).attr('attachment-file-id');
                $input.data('$button').find('.attachment-img').append($(this).find('img').clone().attr('attachment-file-id', $(this).attr('attachment-file-id')));
            });
            $input.val(ids.join());
        } else {
            $input.val($selected.attr('attachment-file-id'));
            $input.data('$button').find('.attachment-img').append($selected.find('img').clone().attr('attachment-file-id', $selected.attr('attachment-file-id')));
        }

        $input.trigger('change');
    });

    $(document.body).on('click', '.pu-attachmentSelector .close', function (e) {
        e.preventDefault();
        var $selected = $(this).data('selectedPhoto');
        console.log('fuck ', $selected)

        if (!(+$selected)) {
            var confirmResult = confirm("Вы не выбрали ни одного загруженного фото, поэтому на сайте они не отобразятся. Продолжить?");
            if (!confirmResult) {
                return;
            }
        }

        $(this).closest('.pu-attachmentSelector').modal('hide');
    });

    // url upload button
    $(document).on('click focus', '.js-url-upload-field, .js-url-upload-button', function (e) {
        $(this).closest('.modal-dialog').find('.js-url-upload-button').removeClass('hide');
    });

    $(document).on('blur', '.js-url-upload-field, .js-url-upload-button', function (e) {
        var value = $(this).closest('.modal-dialog').find('.js-url-upload-field').val();

        if (!value) {
            $(this).closest('.modal-dialog').find('.js-url-upload-button').addClass('hide');
        }
    });

    $(document).on('click', '.js-url-upload-button', function (e) {
        var $field = $(this).closest('.modal-dialog').find('.js-url-upload-field');

        if ($field.val()) {
            sendUrlToServer($field.val(), $field);
        }
    });

    $(document).on('keyup', '.js-url-upload-field', function (e) {
        if (e.keyCode == 13 && $(this).val()) {
            sendUrlToServer($(this).val(), $(this));
        }
    });

    // photo description
    var updatePhotoXhr = false;
    $(document).on('click', '.js-photo-text-button', function (e) {
        if (updatePhotoXhr) {
            updatePhotoXhr.abort();
        }

        updatePhotoXhr = $.ajax({
            url: $(this).closest('.modal').attr('url'),
            data: {
                act: 'updatePhoto',
                url: $(this).closest('.modal').attr('url'),
                attachmentFileId: $(this).closest('.attachment').attr('attachment-file-id')
            },
            context: $(this).closest('.modal'),
            dataType: 'jsonp',
            success: function (data) {
                var $popup = $(this).modal();
                $popup.modal('hide');
                var $modal = $(data.modal).appendTo(document.body);
                $modal.data('$popup', $popup);

                $modal.modal({show: true}).on('hidden.bs.modal', function (e) {
                    $(this).remove();
                    $popup.modal({show: true});
                });

                var clipboard = new Clipboard('.photo-date-insert-link');

                clipboard.on('success', function (e) {
                    if (!$(e.trigger).data("old-text-value")) {
                        $(e.trigger).data("old-text-value", $(e.trigger).html());
                    }

                    $(e.trigger).text($(e.trigger).data("copy-text"));

                    window.setTimeout(function () {
                        $(e.trigger).html($(e.trigger).data("old-text-value"));
                    }, 1000);
                });

                if (typeof $.fn.datepicker === "function") {
                    $modal.find('.js-time-taken').datepicker({
                        format: "yyyy-mm-dd",
                        language: "ru",
                        autoclose: true,
                        todayHighlight: true
                    });
                }

                /*
                 var modalHeight = $('.modal-update-photo .modal-dialog').height(),
                 modalHeaderHeight = $('.modal-update-photo .modal-header').innerHeight(),
                 modalFooterHeight = $('.modal-update-photo .modal-footer').innerHeight(),
                 modalBodyHeight = modalHeight - modalHeaderHeight - modalFooterHeight;
                 $('.modal-update-photo .modal-body').height(modalBodyHeight);*/
            }
        });
    });

    $(document).on('click', '.js-toggle-photo-loc-date-btn', function () {
        $(this).closest('.js-toggle-photo-loc-date-wrp').find('.js-toggle-photo-loc-date-value').slideToggle(function () {
            $(this).trigger('open');
        });
    });

    $(document).on('keyup change', '.js-update-photo .js-attachment-photo-href', function () {
        var $modal = $(this).closest('.js-update-photo');
        $modal.data('$popup').find('div[attachment-file-id="' + $modal.attr('attachment-file-id') + '"]').data('href', $(this).val());
    });

    $(document).on('saved.autosaving', '.js-update-photo .js-attachment-photo-description', function () {
        var $modal = $(this).closest('.js-update-photo');
        var languageCode = $(this).attr('code');
        $modal.data('$popup').find('div[attachment-file-id="' + $modal.attr('attachment-file-id') + '"] .js-photo-description-' + languageCode).val($(this).val());
    });

    /*
     $(document).on('click', '.js-photo-text-dismiss', function (e) {
     // $(this).closest('.attachment').find('.js-photo-text').addClass('hide');
     // $(this).closest('.attachment').find('.js-photo-text-dismiss').addClass('hide');
     
     $(this).closest('.modal-edit-photo').hide();
     });
     */

    $(document).on('click', '.js-select-all-img', function () {
        $(this).closest('.modal-dialog').find('.attachment').addClass('ui-selected');
        $(this).closest('.modal-dialog').find('.js-select-img-count').text($(this).closest('.modal-dialog').find('.ui-selected').length);
        $(this).closest('.modal-dialog').find('.js-unselect-all-img').removeClass('hide');
        $(this).addClass('hide');
    });

    $(document).on('click', '.js-unselect-all-img', function () {
        $(this).closest('.modal-dialog').find('.attachment').removeClass('ui-selected');
        $(this).closest('.modal-dialog').find('.js-select-img-count').text($(this).closest('.modal-dialog').find('.ui-selected').length);
        $(this).closest('.modal-dialog').find('.js-select-all-img').removeClass('hide');
        $(this).addClass('hide');
    });

    var attachmentAlert = function ($modal) {
        //console.log($modal);
        var isFile = $modal.find('.attachment').length;
        $modal.find('.js-attachment-msg').addClass('hide');

        if (!isFile) {
            return $modal.find('.js-attachment-msg-no-photo').removeClass('hide');
        }

        var isSelected = $modal.find('.attachment.ui-selected').length;

        if (isSelected) {
            return $modal.find('.js-attachment-msg-default').removeClass('hide');
        } else {
            return $modal.find('.js-attachment-msg-not-selected').removeClass('hide');
        }
    }

    // Apply attachment to elements
    //console.log('#code.048');
    $('.attachment-ajax').attachment();

});
